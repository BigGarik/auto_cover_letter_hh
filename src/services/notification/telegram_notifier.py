# src/services/notification/telegram_notifier.py

from __future__ import annotations

from aiogram.exceptions import TelegramBadRequest

from src.bot_init import bot  # aiogram Bot


async def send_processing_summary(
    *,
    user_id: int,
    run_type: str,
    resumes_enqueued: int,
) -> None:
    """
    –ö–æ—Ä–æ—Ç–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ —Ç–æ–º, —á—Ç–æ –∑–∞–¥–∞—á–∏ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω—ã.
    """
    rt_human = {
        "free_daily": "–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –∑–∞–ø—É—Å–∫ (FREE)",
        "paid_hourly": "–ü–æ—á–∞—Å–æ–≤–æ–π –∑–∞–ø—É—Å–∫ (PLUS/PRO)",
        "bulk": "–ú–∞—Å—Å–æ–≤—ã–π –∑–∞–ø—É—Å–∫",
        "manual": "–†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫",
    }.get(run_type, "–ó–∞–ø—É—Å–∫")

    text = (
        f"‚úÖ {rt_human}\n"
        f"üîß –ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–¥–∞—á –∑–∞–≤–µ—Ä—à–µ–Ω–∞.\n"
        f"üìÑ –†–µ–∑—é–º–µ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {resumes_enqueued}"
    )

    try:
        await bot.send_message(chat_id=user_id, text=text)
    except TelegramBadRequest:
        # –º–æ–ª—á–∞ –≥–ª–æ—Ç–∞–µ–º, —á—Ç–æ–±—ã –Ω–µ –≤–∞–ª–∏—Ç—å –≤–æ—Ä–∫–µ—Ä
        pass
