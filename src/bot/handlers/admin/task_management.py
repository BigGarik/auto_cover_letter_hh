# src/handlers/bot/admin.py
from aiogram import Router
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

# from src.tasks.apply import apply_to_vacancies_task

router = Router()


@router.message(lambda m: m.text == "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
async def admin_settings_handler(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ - –∑–∞–ø—É—Å–∫–∞–µ—Ç –∑–∞–¥–∞—á—É —Ä–∞—Å—Å—ã–ª–∫–∏ –æ—Ç–∫–ª–∏–∫–æ–≤"""
    await message.answer("üöÄ –ó–∞–ø—É—Å–∫–∞—é –∑–∞–¥–∞—á—É —Ä–∞—Å—Å—ã–ª–∫–∏ –æ—Ç–∫–ª–∏–∫–æ–≤...")

    try:
        # await apply_to_vacancies_task()
        await message.answer("‚úÖ –ó–∞–¥–∞—á–∞ —Ä–∞—Å—Å—ã–ª–∫–∏ –æ—Ç–∫–ª–∏–∫–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏: {e}")